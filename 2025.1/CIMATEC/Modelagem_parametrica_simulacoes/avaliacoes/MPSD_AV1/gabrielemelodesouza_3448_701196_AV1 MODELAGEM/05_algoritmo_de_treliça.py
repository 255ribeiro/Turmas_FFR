# -*- coding: utf-8 -*-
"""treliça.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1a3uJ84PreVq9q4TOTNgI6zMslRSxqoac
"""

#Av1 Modelagem paramétrica e simulações digitais

# Equipe:
# 1- Gabriela Gusmão
# 2- Gabriele Melo
# 3- Maria Eduarda Britto
# 4- Rute Robatto
# 5- Sofia Santana

#Docente - Fernando Ribeiro

#importando bibliotecas que auxiliarão no código
import numpy as np #biblioteca de matemática
import matplotlib.pyplot as plt #biblioteca para fazer figuras

#entradas
comp = 10.0 #float, comprimento da treliça
h = 2.0 #float, altura da treliça
n_nos = 10 #int, número de pontos da treliça

#valores em equidistância, com valor de início e parada
coord_x = np.linspace(0, comp, n_nos) #apenas uma coord x por ser igual nos dois banzos
coord_y1 = [0] * n_nos
coord_y2 = [h] * n_nos

list(range(n_nos)) #mostra os valores da coord x da treliça

diag_y = [] #lista vazia para conseguir dar append
for i in range(n_nos):
  if i % 2 == 0: # == p/ comparação; o if vai rodar se a comparação for verdadeira
    diag_y.append(0)
  else: #roda se a comparação do if for falsa
    diag_y.append(h)
print(diag_y)

fig, ax = plt.subplots() #comando para gerar figuras

ax.set_title("Treliça") #adicionar título
ax.scatter(coord_x, coord_y1) #plotagem de pontos coord y1
ax.plot(coord_x, coord_y1) #liga todos as coordenadas com linha y1

ax.scatter(coord_x, coord_y2) #plotagem dos pontos coord y2
ax.plot(coord_x, coord_y2) #ligando os pontos da coord y2

ax.plot(coord_x, diag_y) #plotagem das linhas diagonais ligando os pontos de coord x e y

ax.axis("off") #apagar os eixos
ax.set_aspect("equal") #adequar a proporção da tela e imagem

5//2 , 5%2
# // realiza uma divisão inteira, % mostra o resto da divisão